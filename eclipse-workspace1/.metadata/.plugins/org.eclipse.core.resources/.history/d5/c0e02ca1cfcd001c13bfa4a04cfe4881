package com.herokuapp.theinternet;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.Assert;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

public class NegativeTests {
	
	@Parameters({ "username", "password", "expectedMessage" })

	@Test (priority = 1, groups = { "negativeTests", "smokeTests" })
	public void negativeLoginTest(String username, String password, String expectedErrorMessage) {
		System.out.println("Starting negativeLoginTest with " + username + " and " + password );
		
    		System.out.println("Starting the incorrect Username Test");
    		
//    		Create driver
    		System.setProperty("webdriver.gecko.driver", "src/main/resources/geckodriver.exe");
    		WebDriver driver = new FirefoxDriver();

    		// sleep for 3 seconds
    		sleep(3000);

    		// maximize browser window
    		driver.manage().window().maximize();

//    		open test page
    		String url = "http://the-internet.herokuapp.com/login";
    		driver.get(url);
    		System.out.println("Page is opened.");
    		
//    		enter username
    		WebElement usernameElement = driver.findElement(By.id("username"));
    		usernameElement.sendKeys(username);
    		
//    		enter password
    		WebElement passwordElement = driver.findElement(By.name("password"));
    		passwordElement.sendKeys(password);
    		
//    		click login button
    		WebElement logInButton = driver.findElement(By.tagName("button"));
    		logInButton.click();
    		
    		sleep(3000);
    		
    		//Verifications
    		WebElement errorMessage = driver.findElement(By.id("flash"));
    		
    		String actualErrorMessage = errorMessage.getText();
    		
    		Assert.assertTrue(actualErrorMessage.contains(expectedErrorMessage), 
    				"How unfortunate, the actual message does not match the expected message \nActual Message: " + actualErrorMessage 
    				+ "\nExpected Message: " + expectedErrorMessage);
    		
    		//Close browser
    		driver.quit();
	}
    
	/*
	 * @Test (priority = 2, groups = { "negativeTests"}) public void
	 * incorrectPasswordTest() {
	 * 
	 * System.out.println("Starting the incorrect Username Test");
	 * 
	 * // Create driver System.setProperty("webdriver.chrome.driver",
	 * "src/main/resources/chromedriver.exe"); WebDriver driver = new
	 * ChromeDriver();
	 * 
	 * // sleep for 3 seconds sleep(3000);
	 * 
	 * // maximize browser window driver.manage().window().maximize();
	 * 
	 * // open test page String url = "http://the-internet.herokuapp.com/login";
	 * driver.get(url); System.out.println("Page is opened.");
	 * 
	 * // enter username WebElement username =
	 * driver.findElement(By.id("username")); username.sendKeys("tomsmith");
	 * 
	 * // enter password WebElement password =
	 * driver.findElement(By.name("password"));
	 * password.sendKeys("incorrectPassword");
	 * 
	 * // click login button WebElement logInButton =
	 * driver.findElement(By.tagName("button")); logInButton.click();
	 * 
	 * sleep(3000);
	 * 
	 * //Verifications WebElement errorMessage = driver.findElement(By.id("flash"));
	 * String expectedErrorMessage = "Your password is invalid!"; String
	 * actualErrorMessage = errorMessage.getText();
	 * 
	 * Assert.assertTrue(actualErrorMessage.contains(expectedErrorMessage),
	 * "How unfortunate, the actual message does not match the expected message \nActual Message: "
	 * + actualErrorMessage + "\nExpected Message: " + expectedErrorMessage);
	 * 
	 * //Close browser driver.quit(); }
	 */
    	private void sleep(long m) {
    		try {
    			Thread.sleep(m);
    		} catch (InterruptedException e) {
    			// TODO Auto-generated catch block
    			e.printStackTrace();
    		}
      }  	
   
    
}
